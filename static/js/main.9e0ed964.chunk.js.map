{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","handleTab","title","content","App","state","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAM,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,CAAf,KAAkCD,EAAK,GAQzE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBACEE,UAAWE,IACT,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KAExC,UAAQ,MAJV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBArBL,SAACN,GACbJ,IAAkBI,EAAIC,IACxBJ,EAAcG,EAEjB,CAiB4BO,CAAUP,EAAhB,EAHX,SAKGA,EAAIQ,SAPFR,EAAIC,GANH,QAoBd,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,GAAW,UACPA,EAAYW,aAKxB,EC/CYd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAO7BC,EAAb,4MACEC,MAAQ,CACNf,cAAeD,EAAK,GAAGM,IAF3B,EAKEJ,cAAgB,SAACG,GACW,EAAKW,MAAvBf,gBAEcI,EAAIC,IACxB,EAAKW,SAAS,CACZhB,cAAeI,EAAIC,IAGxB,EAbH,4CAeE,WACE,IAAQL,EAAkBiB,KAAKF,MAAvBf,cACFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,CAAf,IAEjC,OACE,sBAAKM,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEGJ,GAAW,WACNA,EAAYU,UAIpB,cAAC,EAAD,CACEZ,cAAeA,EACfD,KAAMA,EACNE,cAAegB,KAAKhB,kBAI3B,KAnCH,GAAyBiB,aCdzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.9e0ed964.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find((tab => tab.id === selectedTabId)) || tabs[0];\n\n  const handleTab = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={classNames(\n                { 'is-active': selectedTab.id === tab.id },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab && (\n          `${selectedTab.content}`\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTabId: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedTabId: tabs[0].id,\n  };\n\n  onTabSelected = (tab: Tab) => {\n    const { selectedTabId } = this.state;\n\n    if (selectedTabId !== tab.id) {\n      this.setState({\n        selectedTabId: tab.id,\n      });\n    }\n  };\n\n  render() {\n    const { selectedTabId } = this.state;\n    const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">\n          Selected tab is\n          {selectedTab && (\n            ` ${selectedTab.title}`\n          )}\n        </h1>\n\n        <Tabs\n          selectedTabId={selectedTabId}\n          tabs={tabs}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}